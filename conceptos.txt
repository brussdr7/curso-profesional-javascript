DOM:
document object model
Es la representacion que hace el navegador de un documento html, cuando el navegador
recibe el archivo lo convierte en algo parecido a una estructura jer√°rquica.

Abstract Syntax Tree (AST):
 Es una estructura de datos que represanta
 el codigo del programa.

Syntax Error:
Cuando parser analiza el programa
y no le hace algun sentido ocurre un 
syntax error. Es lanzado cuando el motor de javascript
se encuentra con partes del codigo que no forman parte
de la sintaxys del lenguaje al momoneto de analizar el 
codigo.

Bundling y code splitting:
El codigo se empaqueta de forma eficiente, es decir separar
el codigo y solo se va acargar cuando sea necesario. Como en SPA

Bytecode:
Es una abstraccion del codigo maquina y es facil de compilar,
es portatil, ejecutado por una virtual machine.

Profiling data:
Analiza la ejecucion y va encotrar los puntos donde el programa 
se puede optimizar.

Event Loop:
Hace que javascript paresca multi hilo a pesar de que corre un
solo proceso. Es un loop que se esta ejecutando todo el tiempo
y pasa periodicamente revizando las queues y el stack.

Memory heap:
De forma desorganizada se guarda informacion de variables, funciones
y del scope.

Scope:
Esta determinado por el conjunto de variables parametros y funciones
que se pueden acceder desde esa funcion cuando se esta ejecutando.

Call stack:
Va apilando de forma organizada las diferentes instrucciones que se
llaman.

Schedule task:
Aqui se colocan las tareas agendadas. Son tareas que se van a ejecutar
en un futuro no de forma inmediata.

Micro task queue:
Aqui se almacenan las promesas. Esta queue es la que tiene mayor
prioridad.

Task queue:
Aqui se agregan las tareas que estan listas para ser agregadas al
stack y ser ejecutadas. El stack debe estar vsacio para que esto suceda.

Promesas estados:
Etado pending, estado fulfilled, estado rejected.

Getters y Setters:
Son funciones que podemos usar en un objeo pra tener propiedadesvirtuales.

